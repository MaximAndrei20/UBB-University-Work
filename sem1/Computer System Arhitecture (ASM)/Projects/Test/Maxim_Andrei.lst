     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fprintf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  import fprintf msvcrt.dll
    13                                  
    14                                                            
    15                                                            
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18 00000000 696E7075742E747874-         input_file_name db "input.txt",0
    18 00000009 00                 
    19 0000000A 6F75747075742E7478-         output_file_name db "output.txt", 0
    19 00000013 7400               
    20 00000015 7700                        acces_mode_w db "w", 0
    21 00000017 7200                        acces_mode_r db "r", 0
    22 00000019 00000000                    input_file_descriptor dd 0
    23 0000001D 00000000                    output_file_descriptor dd 0
    24 00000021 00<rept>                    text times 105 db 0
    25 0000008A 00000000                    len dd 0
    26 0000008E 25640A00                    format_print_number db "%d", 10, 0
    27 00000092 00<rept>                    nume times 100 db 0
    28 000000F6 25730A00                    format_print_string db "%s", 10, 0
    29 000000FA 00000000                    counter_plus_10 dd 0
    30 000000FE 00000000                    len_nume dd 0
    31 00000102 00<rept>                    gender times 3 db 0
    32                                      
    33                                  ; our code starts here
    34                                  segment code use32 class=code
    35                                      start:
    36 00000000 68[17000000]                    push dword acces_mode_r
    37 00000005 68[00000000]                    push dword input_file_name
    38 0000000A FF15[00000000]                  call [fopen]
    39 00000010 83C408                          add esp, 4*2
    40                                          
    41 00000013 85C0                            test eax, eax
    42 00000015 0F84F5000000                    jz final
    43 0000001B A3[19000000]                    mov [input_file_descriptor], eax
    44                                          
    45 00000020 68[15000000]                    push dword acces_mode_w
    46 00000025 68[0A000000]                    push dword output_file_name
    47 0000002A FF15[00000000]                  call [fopen]
    48 00000030 83C408                          add esp, 4*2
    49                                          
    50 00000033 85C0                            test eax,eax
    51 00000035 0F84D5000000                    jz final
    52 0000003B A3[1D000000]                    mov [output_file_descriptor], eax
    53                                          
    54                                          
    55 00000040 FF35[19000000]                  push dword [input_file_descriptor]
    56 00000046 6A68                            push dword 104
    57 00000048 6A01                            push dword 1
    58 0000004A 68[21000000]                    push text
    59 0000004F FF15[00000000]                  call [fread]
    60 00000055 83C410                          add esp, 4*4
    61 00000058 A3[8A000000]                    mov [len], eax
    62                                          
    63 0000005D FF35[8A000000]                  push dword [len]
    64 00000063 68[8E000000]                    push dword format_print_number
    65 00000068 FF35[1D000000]                  push dword [output_file_descriptor]
    66 0000006E FF15[00000000]                  call [fprintf]
    67 00000074 83C40C                          add esp, 4*3
    68                                          
    69                                          ;get the name
    70 00000077 BE[21000000]                    mov esi, text
    71 0000007C BF[92000000]                    mov edi, nume
    72                                          
    73                                          start_loop_nume:
    74 00000081 803E20                              cmp byte[esi], ' '
    75 00000084 740A                                je final_loop_nume
    76 00000086 A4                                  movsb
    77 00000087 8305[FE000000]01                    add dword [len_nume], 1
    78 0000008E EBF1                                jmp start_loop_nume
    79                                          final_loop_nume:
    80                                          
    81                                          ; get the counter
    82                                          
    83 00000090 83C605                          add esi, 5
    84 00000093 8A1E                            mov bl, [esi]
    85 00000095 80EB30                          sub bl, '0'
    86 00000098 31C0                            xor eax, eax
    87 0000009A 88D8                            mov al,bl
    88 0000009C 83C00A                          add eax, 10
    89 0000009F A3[FA000000]                    mov [counter_plus_10], eax
    90                                          
    91                                          
    92                                          
    93 000000A4 68[92000000]                    push dword nume
    94 000000A9 68[F6000000]                    push dword format_print_string
    95 000000AE FF35[1D000000]                  push dword [output_file_descriptor]
    96 000000B4 FF15[00000000]                  call [fprintf]
    97 000000BA 83C40C                          add esp, 4*3
    98                                          
    99 000000BD FF35[FA000000]                  push dword [counter_plus_10]
   100 000000C3 68[8E000000]                    push dword format_print_number
   101 000000C8 FF35[1D000000]                  push dword [output_file_descriptor]
   102 000000CE FF15[00000000]                  call [fprintf]
   103 000000D4 83C40C                          add esp, 4*3
   104                                          
   105                                          ;check char from nume+len_nume-1
   106                                          
   107 000000D7 A1[FE000000]                    mov eax, [len_nume]
   108 000000DC 80B8[91000000]61                cmp byte[eax+nume-1], 'a'
   109 000000E3 7409                            je fata
   110                                          ;caz baiat
   111 000000E5 C605[02010000]4D                mov byte[gender], 'M'
   112 000000EC EB09                            jmp gata_gender
   113                                          fata:
   114 000000EE C605[02010000]46                mov byte[gender], 'F'
   115 000000F5 EB00                            jmp gata_gender
   116                                          
   117                                          gata_gender:
   118 000000F7 68[02010000]                    push dword gender
   119 000000FC 68[F6000000]                    push dword format_print_string
   120 00000101 FF35[1D000000]                  push dword [output_file_descriptor]
   121 00000107 FF15[00000000]                  call [fprintf]
   122 0000010D 83C40C                          add esp, 4*3
   123                                          
   124                                          
   125                                          
   126                                          final:
   127                                          
   128                                          ; exit(0)
   129 00000110 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   130 00000112 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
