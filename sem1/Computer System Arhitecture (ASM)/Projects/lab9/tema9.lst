     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fprintf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import fprintf msvcrt.dll                      
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 6F75742E74787400            output_file_name db "out.txt",0
    15 00000008 616E61202061726520-         text db "ana  are   mere"
    15 00000011 20206D657265       
    16                                      lenT equ $-text
    17 00000017 00<rept>                    formated_text times 100 db 0
    18 0000007B 7700                        acces_mode_write db 'w', 0
    19 0000007D 00000000                    output_file_descriptor dd 0
    20 00000081 00000000                    counter dd 0
    21 00000085 256400                      format_print_number db "%d", 0
    22 00000088 256300                      format_print_character db '%c', 0
    23 0000008B 00000000                    ecx_copy dd 0
    24                                      
    25                                      
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30 00000000 68[7B000000]                    push acces_mode_write
    31 00000005 68[00000000]                    push output_file_name
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp, 4*2
    34 00000013 A3[7D000000]                    mov [output_file_descriptor], eax
    35                                          ;getting file descriptor
    36                                          
    37 00000018 B90F000000                      mov ecx, lenT
    38 0000001D BE[08000000]                    mov esi, text
    39 00000022 BF[17000000]                    mov edi, formated_text
    40 00000027 C705[81000000]0100-             mov dword[counter], 1
    40 0000002F 0000               
    41                                          
    42 00000031 E361                            jecxz endloop
    43                                          repeat_label:
    44 00000033 890D[8B000000]                      mov [ecx_copy], ecx
    45 00000039 AC                                  lodsb
    46 0000003A 3C20                                cmp al, ' '
    47 0000003C 742A                                je do_not_change
    48 0000003E 8B1D[81000000]                      mov ebx, [counter]
    49 00000044 83E301                              and ebx, 1 ;checking the parity of the index
    50 00000047 83FB00                              cmp ebx, 0
    51 0000004A 751C                                jne do_not_change
    52                                              
    53 0000004C FF35[81000000]                      push dword[counter]
    54 00000052 68[85000000]                        push dword format_print_number
    55 00000057 FF35[7D000000]                      push dword[output_file_descriptor]
    56 0000005D FF15[00000000]                      call [fprintf]
    57 00000063 83C40C                              add esp, 4*3
    58 00000066 EB1E                                jmp end_loop
    59                                              
    60                                              
    61                                              do_not_change:
    62                                              
    63 00000068 88C3                                mov bl, al
    64 0000006A B800000000                          mov eax, 0
    65 0000006F 88D8                                mov al, bl
    66                                              
    67 00000071 50                                  push eax
    68 00000072 68[88000000]                        push format_print_character
    69 00000077 FF35[7D000000]                      push dword [output_file_descriptor]
    70 0000007D FF15[00000000]                      call [fprintf]
    71 00000083 83C40C                              add esp, 4*3
    72                                              
    73                                              end_loop:
    74 00000086 FF05[81000000]                      inc dword[counter]
    75                                              
    76 0000008C 8B0D[8B000000]                      mov ecx, [ecx_copy]
    77 00000092 E29F                                loop repeat_label
    78                                          endloop
    78          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    79                                          ; exit(0)
    80 00000094 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    81 00000096 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
