     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf, fprintf, fread, fopen              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  import fopen msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  import fprintf msvcrt.dll
    14                                  
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18 00000000 00<rept>                    s times 100 db 0
    19 00000064 696E7075742E747874-         filename db "input.txt", 0
    19 0000006D 00                 
    20 0000006E 6F75747075742E7478-         fileoutput db "output.txt", 0
    20 00000077 7400               
    21 00000079 7200                        acces_mode db "r",0
    22 0000007B 7700                        acces_mode_w db "w", 0
    23 0000007D 00000000                    fd dd 0
    24 00000081 00000000                    fd_out dd 0
    25 00000085 257300                      format_output db "%s", 0
    26 00000088 257300                      scanf_format db "%s", 0
    27 0000008B 00<rept>                    input_from_user times 100 db 0
    28 000000EF 20257300                    printf_format db " %s", 0
    29                                      
    30                                  
    31                                  ; our code starts here
    32                                  segment code use32 class=code
    33                                      start:
    34 00000000 68[79000000]                    push dword acces_mode
    35 00000005 68[64000000]                    push dword filename
    36 0000000A FF15[00000000]                  call [fopen]
    37 00000010 83C408                          add esp, 4*2
    38 00000013 A3[7D000000]                    mov [fd], eax
    39                                          
    40                                          
    41 00000018 FF35[7D000000]                  push dword [fd]
    42 0000001E 6A32                            push dword 50
    43 00000020 6A01                            push dword 1
    44 00000022 68[00000000]                    push dword s
    45 00000027 FF15[00000000]                  call [fread]
    46 0000002D 83C410                          add esp, 4*4
    47                                          
    48 00000030 68[7B000000]                    push dword acces_mode_w
    49 00000035 68[6E000000]                    push dword fileoutput
    50 0000003A FF15[00000000]                  call [fopen]
    51 00000040 83C408                          add esp, 4*2
    52 00000043 A3[81000000]                    mov [fd_out], eax
    53                                          
    54 00000048 68[00000000]                    push dword s
    55 0000004D 68[85000000]                    push dword format_output
    56 00000052 FF35[81000000]                  push dword [fd_out]
    57 00000058 FF15[00000000]                  call [fprintf]
    58 0000005E 83C40C                          add esp, 4*3
    59                                          
    60 00000061 68[8B000000]                    push input_from_user
    61 00000066 68[88000000]                    push scanf_format
    62 0000006B FF15[00000000]                  call [scanf]
    63 00000071 83C408                          add esp, 4*2
    64                                          
    65 00000074 68[8B000000]                    push dword input_from_user
    66 00000079 68[EF000000]                    push dword printf_format
    67 0000007E FF35[81000000]                  push dword [fd_out]
    68 00000084 FF15[00000000]                  call [fprintf]
    69 0000008A 83C40C                          add esp, 4*3
    70                                          
    71                                          
    72                                          
    73 0000008D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    74 0000008F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
