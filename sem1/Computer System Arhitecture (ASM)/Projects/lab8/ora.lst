     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 00000000                    x dd 0
    15 00000004 00000000                    y dd 0
    16 00000008 256400                      scanf_format db "%d", 0
    17 0000000B 782B793D256400              printf_format db "x+y=%d",0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      add_numbers:
    22 00000000 8B442408                        mov eax, [esp+8]
    23 00000004 8B5C2404                        mov ebx, [esp+4]
    24                                          
    25 00000008 01D8                            add eax, ebx
    26 0000000A C3                              ret
    27                                      start:
    28 0000000B 68[00000000]                    push dword x
    29 00000010 68[08000000]                    push scanf_format
    30 00000015 FF15[00000000]                  call [scanf]
    31 0000001B 83C408                          add esp, 4*2
    32                                          
    33 0000001E 68[04000000]                    push dword y
    34 00000023 68[08000000]                    push scanf_format
    35 00000028 FF15[00000000]                  call [scanf]
    36 0000002E 83C408                          add esp, 4*2
    37                                          
    38 00000031 FF35[00000000]                  push dword[x]
    39 00000037 FF35[04000000]                  push dword[y]
    40 0000003D E8BEFFFFFF                      call add_numbers
    41                                          
    42 00000042 50                              push eax
    43 00000043 68[0B000000]                    push printf_format
    44 00000048 FF15[00000000]                  call [printf]
    45 0000004E 83C408                          add esp, 4*2
    46                                          ; exit(0)
    47 00000051 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000053 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
