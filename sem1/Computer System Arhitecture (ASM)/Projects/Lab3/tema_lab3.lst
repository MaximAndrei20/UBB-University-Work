     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; 20) x-b+8+(2*a-b)/(b*b)+e; a-word; b-byte; e-doubleword; x-qword
    14 00000000 0500                        a dw 0x5
    15 00000002 02                          b db 0x2
    16 00000003 05000000                    e dd 0x5
    17 00000007 0500000000000000            x dq 0x5
    18                                      
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B0F9                            mov al, -99>>4
    23          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    24 00000002 B0FF                            mov al, -1>>12
    24          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    25                                          
    26                                          ; exit(0)
    27 00000004 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    28 00000006 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
